
problem-1)--

task-1.)
--Read the text file, and create a tupled rdd.

val file = sc.textFile("/home/acadgild/Desktop/17.2/college.txt")
var tuple  =  file.map(x=> {
                          val row = x.split(",").toList
                          (row.apply(0), row.apply(1), row.apply(2), row.apply(3).toInt, row.apply(4).toInt)
                         })
task-2.)
--Find the count of total number of rows present.

val rowCount = tuple.count;

task-3)
What is the distinct number of subjects present in the entire school

val subjects = tuple.map(x=> x._2).distinct();
subjects.foreach(println);
val subCount = subjects.count;

task-4)
--What is the count of the number of students in the school, whose name is Mathew and marks is 55

val mathew55 = tuple.map(x=> (x._1, x._4)).filter(x => (x._1 == "Mathew" && x._2 == 55) );
val studentCount = mathew55.count;


problem-2)--

task-1)
--What is the count of students per grade in the school?

val countInGrade = tuple.map( x => (x._1 , x._3)).distinct.map(x=>(x._2 , 1)).reduceByKey((x,y) => x+y );
countInGrade.foreach(println);
 
task-2)
--Find the average of each student (Note - Mathew is grade-1, is different from Mathew in some other grade!)

val avg = tuple.map( x => ((x._3, x._1) , x._4)).groupByKey().map(x => (x._1,( x._2.sum.toDouble/(x._2.size))))
avg.foreach(println);

task-3)
--What is the average score of students in each subject across all grades?

val Sub_avg = tuple.map( x => (x._2 , x._4)).groupByKey().map(x => (x._1,( x._2.sum.toDouble/(x._2.size))))
Sub_avg.foreach(println);

task-4)
--What is the average score of students in each subject per grade?

val Sub_grd_avg = tuple.map( x => ((x._2,x._3) , x._4)).groupByKey().map(x => (x._1,( x._2.sum.toDouble/(x._2.size))))
Sub_grd_avg.foreach(println);

task-5)
--For all students in grade-2, how many have average score greater than 50?

val greater50 = tuple.filter(x=>x._3 == "garde-2")
.map(x=>(x._1, x._4.toDouble))
.groupByKey()
.map(x => (x._1,x._2.sum.toDouble/x._2.size))
.filter(_._2 > 50).count()
greater50.foreach(println)



problem-3)--
--Are there any students in the college that satisfy the below criteria :
1. Average score per student_name across all grades is same as average score per student_name per grade

val Sub_avg = tuple.map( x => (x._2 , x._4)).groupByKey().map(x => (x._1,( x._2.sum.toDouble/(x._2.size))))
val Sub_grd_avg = tuple.map( x => ((x._2+ "," +x._3) , x._4)).groupByKey().map(x => (x._1,( x._2.sum.toDouble/(x._2.size))))
val intersection = Sub_avg.intersection(Sub_grd_avg)
intersection.count




















































